/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import org.ini4j.Wini;
import utils.Config;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import services.Converter;
import utils.FileTypeFilter;

/**
 *
 * @author ASUS RG
 */
public class MainForm extends javax.swing.JFrame {
    private List<String> selectedFilePaths = new ArrayList<String>();
    private static Converter converter = new Converter();
    private String inputFolderPath;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        loadDataCBB();
        loadImgApp("/img/openway-way4-logo.png");
    }
    
    private void loadImgApp(String path)
    {
        ImageIcon icon = new ImageIcon(this.getClass().getResource(path));
        this.setIconImage(icon.getImage());
    }
    
    public void getHeaderIni() throws IOException 
    {
        cbbTemplate.removeAllItems();
        Wini ini = Config.getConfigPath();
        for (String sectionName : ini.keySet()) {
            if (sectionName.matches("^\\w+Template$") && !sectionName.equals("FileHeaderTemplate")) {
                cbbTemplate.addItem(sectionName.replace("Template", ""));
            }
        }
    }

    public void loadDataCBB()
    {
        try 
        {
            getHeaderIni();
        }
        catch (Exception e) {
        }

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnChooseFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnConvertFile = new javax.swing.JButton();
        txtPathFileInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbbTemplate = new javax.swing.JComboBox<>();
        menuBarMainForm = new javax.swing.JMenuBar();
        menuSystem = new javax.swing.JMenu();
        menuExit = new javax.swing.JMenuItem();
        menuConfig = new javax.swing.JMenu();
        menuConnectDB = new javax.swing.JMenuItem();
        menuDefaultValues = new javax.swing.JMenuItem();
        menuInputFolder = new javax.swing.JMenuItem();
        menuOutput = new javax.swing.JMenu();
        menuAddTemplate = new javax.swing.JMenuItem();
        menuListTemplates = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Convert Application");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        btnChooseFile.setText("Choose File");
        btnChooseFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFileActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("XML Converter");

        btnConvertFile.setText("Convert File");
        btnConvertFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConvertFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertFileActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("File input:");

        cbbTemplate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        menuBarMainForm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        menuSystem.setText("System");

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exit.png"))); // NOI18N
        menuExit.setText("Exit");
        menuExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        menuSystem.add(menuExit);

        menuBarMainForm.add(menuSystem);

        menuConfig.setText(" Config");

        menuConnectDB.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuConnectDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/database.png"))); // NOI18N
        menuConnectDB.setText("Connect to DB");
        menuConnectDB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuConnectDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConnectDBActionPerformed(evt);
            }
        });
        menuConfig.add(menuConnectDB);

        menuDefaultValues.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuDefaultValues.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/default-value.png"))); // NOI18N
        menuDefaultValues.setText("Default values");
        menuDefaultValues.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuDefaultValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDefaultValuesActionPerformed(evt);
            }
        });
        menuConfig.add(menuDefaultValues);

        menuInputFolder.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuInputFolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/input-folder.png"))); // NOI18N
        menuInputFolder.setText("Input folder");
        menuInputFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInputFolderActionPerformed(evt);
            }
        });
        menuConfig.add(menuInputFolder);

        menuBarMainForm.add(menuConfig);

        menuOutput.setText("Output");

        menuAddTemplate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuAddTemplate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/new-file.png"))); // NOI18N
        menuAddTemplate.setText("Add template");
        menuAddTemplate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuAddTemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddTemplateActionPerformed(evt);
            }
        });
        menuOutput.add(menuAddTemplate);

        menuListTemplates.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuListTemplates.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/list-teamplates.png"))); // NOI18N
        menuListTemplates.setText("List templates");
        menuListTemplates.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuOutput.add(menuListTemplates);

        menuBarMainForm.add(menuOutput);

        setJMenuBar(menuBarMainForm);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPathFileInput, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnChooseFile))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cbbTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnConvertFile)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPathFileInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseFile))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConvertFile)
                    .addComponent(cbbTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //button open file in file explorer
    private void btnChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFileActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setMultiSelectionEnabled(true);
        
        FileFilter csvFilter = new FileTypeFilter(".csv", "CSV");
        FileFilter xlsxFilter = new FileTypeFilter(".xlsx", "Excel");
        FileFilter txtFilter = new FileTypeFilter(".txt", "Text");
        
        fileChooser.addChoosableFileFilter(csvFilter);
        fileChooser.addChoosableFileFilter(xlsxFilter);
        fileChooser.addChoosableFileFilter(txtFilter);
        
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION)
        {
            File[] selectedFiles = fileChooser.getSelectedFiles();
            StringBuilder fileNames = new StringBuilder();
            for(File file : selectedFiles)
            {
                String filename = file.getName();
                fileNames.append(filename).append(", ");
                selectedFilePaths.add(file.getAbsolutePath());
            }
            if (fileNames.length() > 0) 
            {
                fileNames.delete(fileNames.length() - 2, fileNames.length());
            }
            txtPathFileInput.setText(fileNames.toString());
            JOptionPane.showMessageDialog(null, "Selected file: \n" + fileNames.toString(), "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnChooseFileActionPerformed
    
    //button convert csv to xml
    private void btnConvertFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertFileActionPerformed

        if (selectedFilePaths.size() < 1) {
            JOptionPane.showMessageDialog(null, "There is no selected file!", "Warning", JOptionPane.WARNING_MESSAGE);
        } 
        else
        {
            try {
                String templateName = cbbTemplate.getSelectedItem().toString() + "Template";
                List<String> sourceFilePaths = selectedFilePaths;
                List<String> targetFilePaths = converter.convertToXml(sourceFilePaths, templateName);
                int countSuccess = 0;
                for (String targetFilePath : targetFilePaths) {
                    if (!targetFilePath.equals("")) {
                        countSuccess++;
                    }
                }

                JOptionPane.showMessageDialog(null, "Convert " + countSuccess + "/" + targetFilePaths.size()
                        + " files successfully!\nOutput files saved at: /logs/foutputs\nProcess files saved at: /logs/fprocesses\nError files saved at: /logs/ferrors",
                        "Notification", JOptionPane.INFORMATION_MESSAGE);

                txtPathFileInput.setText("");
                selectedFilePaths.clear();
            } 
            catch (IOException e) 
            {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Error when converting file!\nSee log file for more details.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnConvertFileActionPerformed


    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure to exit?", "Notification",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_menuExitActionPerformed

    private void menuAddTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddTemplateActionPerformed
        new CreateTemplateDialog(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_menuAddTemplateActionPerformed

    private void menuConnectDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConnectDBActionPerformed
        new DBDialog(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_menuConnectDBActionPerformed

    private void menuDefaultValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDefaultValuesActionPerformed
          new DefaultValuesDialog(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_menuDefaultValuesActionPerformed

    private void menuInputFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInputFolderActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int choice = fileChooser.showOpenDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File selectedDirectory = fileChooser.getSelectedFile();
            // Save the chosen path
            inputFolderPath = selectedDirectory.getAbsolutePath();
            JOptionPane.showMessageDialog(this, "Path saved successfully:\n" + inputFolderPath, "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_menuInputFolderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseFile;
    private javax.swing.JButton btnConvertFile;
    private javax.swing.JComboBox<String> cbbTemplate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem menuAddTemplate;
    private javax.swing.JMenuBar menuBarMainForm;
    private javax.swing.JMenu menuConfig;
    private javax.swing.JMenuItem menuConnectDB;
    private javax.swing.JMenuItem menuDefaultValues;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuInputFolder;
    private javax.swing.JMenuItem menuListTemplates;
    private javax.swing.JMenu menuOutput;
    private javax.swing.JMenu menuSystem;
    private javax.swing.JTextField txtPathFileInput;
    // End of variables declaration//GEN-END:variables
}
